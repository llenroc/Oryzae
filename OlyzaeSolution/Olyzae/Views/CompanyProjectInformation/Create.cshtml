@model NihonUnisys.Olyzae.Models.ProjectThread

@{
    ViewBag.Title = "Create";
    NihonUnisys.Olyzae.Models.Project project = ViewBag.Project as NihonUnisys.Olyzae.Models.Project;
    IQueryable<NihonUnisys.Olyzae.Models.ParticipantUserProject> projectUsers = ViewBag.ProjectUsers as IQueryable<NihonUnisys.Olyzae.Models.ParticipantUserProject>;

    IQueryable<NihonUnisys.Olyzae.Models.ProjectGroup> groups = ViewBag.ProjectGroups as IQueryable<NihonUnisys.Olyzae.Models.ProjectGroup>;

    List<SelectListItem> groupSelectItems = new List<SelectListItem>();

    if (groups != null)
    {
        foreach (var group in groups)
        {
            groupSelectItems.Add(new SelectListItem { Text = group.GroupName, Value = group.ID.ToString() });
        }
    }

    List<SelectListItem> projetUsersItems = new List<SelectListItem>();

    if (projectUsers != null)
    {
        foreach (var item in projectUsers)
        {
            projetUsersItems.Add(new SelectListItem { Text = item.ParticipantUser.DisplayName, Value = item.ParticipantUser.ID.ToString() });
        }
    }
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
    $(function () {

        var $userItems = $("#users .list-group-item");
        var $selectedUsers = new Array(0);
        delete $selectedUsers[0];

        $userItems.click(function () {
            var target = $(this);

            if (target.hasClass('active')) {
                target.removeClass('active');
                delete $selectedUsers[$(this).attr('data-user')];
            }
            else {
                target.addClass('active');
                $selectedUsers[$(this).attr('data-user')] = $(this).attr('data-user');
            }

            return false;
        });

        $('#SelectGroup').change(function () {
            var selected = $(this).val();

            if (selected == "") {
                return;
            }

            $.ajax({
                url: "/CompanyProjectInformation/project/" + @project.ID +"/GetGroupUsers?groupId=" + selected,
                type: "GET",
                dataType: "json",
                error: function (data) {
                    alert(data.responseText);
                },
                success: function (data) {
                    $userItems.each(function () {
                        if ($.inArray(Number($(this).attr('data-user')), data) >= 0) {
                            $(this).addClass('active');
                            $selectedUsers[$(this).attr('data-user')] = $(this).attr('data-user');
                        } else {
                            $(this).removeClass('active');
                            delete $selectedUsers[$(this).attr('data-user')];
                        }
                    });
                }
            });
        });

        $('form').submit(function () {
            $(this).append($('<input />').attr('type', 'hidden').attr('name', 'SelectedUserIds').attr('value', $selectedUsers.join()));
            return true;
        });

        $("[id^=SelectAddingUserType]").change(function (e) {
            if ($(this).attr('id') == 'SelectAddingUserType1') {

                if ($(this).prop('checked')) {
                    $('#SelectProjectUserSection').css('display', 'none');
                }
            }

            if ($(this).attr('id') == 'SelectAddingUserType2') {
                if ($(this).prop('checked')) {
                    $('#SelectProjectUserSection').css('display', 'block');
                } else {
                    $('#SelectProjectUserSection').css('display', 'none');
                }
            }
        });
    });
</script>

@Html.Partial("_AccountUserProjectMenuPartial", (NihonUnisys.Olyzae.Models.Project)ViewBag.Project)

<h2>配信リストの新規作成</h2>

@using (Html.BeginForm("Create", "CompanyProjectInformation", null, FormMethod.Post, new { enctype = "multipart/form-data", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            <label class="control-label col-md-2" for="ThreadName">配信リストの件名</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThreadName)
                @Html.ValidationMessageFor(model => model.ThreadName)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Body">この配信リストの説明</label>
            <div class="col-md-10">
                @Html.TextArea("Body", new { @class = "form-control", @rows = "5" })
                @Html.ValidationMessage("Body")
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Duration">この配信リストの公開期間</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration.From)
                @Html.ValidationMessageFor(model => model.Duration.From)
                ～
                @Html.EditorFor(model => model.Duration.To)
                @Html.ValidationMessageFor(model => model.Duration.To)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 olyzae-filegroup">
                <div class="olyzae-file" style="display: none; border-radius: 4px; padding: 6px 12px; border: 1px solid #dddddd;">
                    <span class="glyphicon glyphicon-paperclip"></span>
                    <span class="olyzae-filename" style="padding: 0em 0.5em;"></span>
                    <button type="button" class="close olyzae-removefile" style="float: none;">&times;</button>
                </div>
                <div class="olyzae-nofile">
                    <div class="btn btn-default olyzae-addfile" style="position: relative; overflow: hidden;">
                        <input type="file" name="uploadedFile" style="position: absolute; bottom: 0; right: 0; font-size: 100px; opacity: 0;" />
                        <span class="glyphicon glyphicon-paperclip"></span>ファイルを添付する
                    </div>
                </div>
            </div>
        </div>

        <hr />
        <h4>配信先を指定する</h4>
        <h5>@Html.RadioButton("SelectAddingUserType", "1", true, new { @id = "SelectAddingUserType1" })<label for="SelectAddingUserType1">プロジェクトの参加者全員へ配信する</label></h5>

        @if (projectUsers != null)
        {
            <h5>@Html.RadioButton("SelectAddingUserType", "2", false, new { @id = "SelectAddingUserType2" })<label for="SelectAddingUserType2">参加者を選択して配信する</label></h5>

            <div id="SelectProjectUserSection" class="row show-grid" style="display:none;">

                <div id="SelectGroupSection" style="margin-bottom:20px;">
                    <h6>グループで絞り込む</h6>
                    @if (groups != null)
                    {
                        @Html.DropDownList("SelectGroup", groupSelectItems, "グループを選択", new { @class = "form-control" })
                    }
                </div>

                <div class="list-group" id="users">
                    @foreach (var user in projectUsers)
                    {
                        <a href="#" class="list-group-item" data-user="@(user.ParticipantUser.ID)">
                            <h5 class="list-group-item-heading">
                                @user.ParticipantUser.DisplayName
                            </h5>
                        </a>
                    }
                </div>
            </div>
        }
        else
        {
            <p>
                @Html.RadioButton("SelectAddingUserType", "2", false, new { @id = "SelectAddingUserType2", @disabled = "disabled" })
                <label for="SelectAddingUserType2" class="disabled text-muted">参加者を選択して配信する</label>
            </p>
            <p>参加者がいません。</p>
        }

        <div class="form-group">
            <input type="submit" value="作成" class="btn btn-default" />
            @Html.ValidationMessage("ProjectUsers")
        </div>
    </div>
}

<div>
    @Html.ActionLink("配信リストの一覧へ戻る", "Index")
</div>

@section scripts {
    @if (false)
    {
        <script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
    }
    <script type="text/javascript">
        function addFile($container, fileName) {
            $container.find('.olyzae-nofile').css({ display: 'none' });
            $container.find('.olyzae-filename').text(fileName);
            $container.find('.olyzae-file').css({ display: 'inline-block' });
        }
        function removeFile($container) {
            $container.find('.olyzae-file').css({ display: 'none' });
            $container.find('.olyzae-filename').text('');
            $container.find('.olyzae-nofile').css({ display: 'inherit' });
        }
        $(function () {
            $('.olyzae-filegroup input[type=file]').change(function () {
                var $container = $(this).closest('.olyzae-filegroup');
                var fileName = $(this).val().replace(/.*[/\\]/, '');
                if (fileName) {
                    addFile($container, fileName);
                } else {
                    removeFile($container);
                }
            });
            $('.olyzae-filegroup .olyzae-removefile').click(function () {
                var $container = $(this).closest('.olyzae-filegroup');
                $container.wrap("<form />");
                $container.parent().trigger('reset');
                $container.unwrap();
                removeFile($container);
            });
        });
    </script>
}